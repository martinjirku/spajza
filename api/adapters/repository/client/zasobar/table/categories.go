//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Categories = newCategoriesTable("zasobar", "categories", "")

type categoriesTable struct {
	mysql.Table

	// Columns
	ID          mysql.ColumnInteger
	CreatedAt   mysql.ColumnTimestamp
	UpdatedAt   mysql.ColumnTimestamp
	DeletedAt   mysql.ColumnTimestamp
	Title       mysql.ColumnString
	DefaultUnit mysql.ColumnString
	Path        mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type CategoriesTable struct {
	categoriesTable

	NEW categoriesTable
}

// AS creates new CategoriesTable with assigned alias
func (a CategoriesTable) AS(alias string) *CategoriesTable {
	return newCategoriesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new CategoriesTable with assigned schema name
func (a CategoriesTable) FromSchema(schemaName string) *CategoriesTable {
	return newCategoriesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new CategoriesTable with assigned table prefix
func (a CategoriesTable) WithPrefix(prefix string) *CategoriesTable {
	return newCategoriesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new CategoriesTable with assigned table suffix
func (a CategoriesTable) WithSuffix(suffix string) *CategoriesTable {
	return newCategoriesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newCategoriesTable(schemaName, tableName, alias string) *CategoriesTable {
	return &CategoriesTable{
		categoriesTable: newCategoriesTableImpl(schemaName, tableName, alias),
		NEW:             newCategoriesTableImpl("", "new", ""),
	}
}

func newCategoriesTableImpl(schemaName, tableName, alias string) categoriesTable {
	var (
		IDColumn          = mysql.IntegerColumn("id")
		CreatedAtColumn   = mysql.TimestampColumn("created_at")
		UpdatedAtColumn   = mysql.TimestampColumn("updated_at")
		DeletedAtColumn   = mysql.TimestampColumn("deleted_at")
		TitleColumn       = mysql.StringColumn("title")
		DefaultUnitColumn = mysql.StringColumn("default_unit")
		PathColumn        = mysql.StringColumn("path")
		allColumns        = mysql.ColumnList{IDColumn, CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn, TitleColumn, DefaultUnitColumn, PathColumn}
		mutableColumns    = mysql.ColumnList{CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn, TitleColumn, DefaultUnitColumn, PathColumn}
	)

	return categoriesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:          IDColumn,
		CreatedAt:   CreatedAtColumn,
		UpdatedAt:   UpdatedAtColumn,
		DeletedAt:   DeletedAtColumn,
		Title:       TitleColumn,
		DefaultUnit: DefaultUnitColumn,
		Path:        PathColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
